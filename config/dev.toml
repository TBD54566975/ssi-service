title = "SSI Service Config"

svn = "0.0.1"
desc = "Default configuration to be used while running the service for testing as a single go process."

# http service configuration
[server]
env = "dev" # either 'dev', 'test', or 'prod'
api_host = "0.0.0.0:3000"
debug_host = "0.0.0.0:4000"
jager_host = "http://localhost:14268/api/traces"
jager_enabled = false

# 5 seconds, time is in nanoseconds
read_timeout = 5000000000
write_timeout = 5000000000
shutdown_timeout = 5000000000

log_location = ""
# options: trace, debug, info, warn, error, fatal, panic
log_level = "debug"

enable_schema_caching = true
enable_allow_all_cors = true

# Storage Configuration
[services]
service_endpoint = "http://localhost:3000"

# example bolt config with filepath option
storage = "bolt"

[[services.storage_option]]
id = "boltdb-filepath-option"
option = "bolt.db"

# example redis config with two options
# storage = "redis"
#
# [[services.storage_option]]
# id = "redis-address-option"
# option = "localhost:6379"
#
# [[services.storage_option]]
# id = "storage-password-option"
# option = "password"

# per-service configuration
[services.keystore]
name = "keystore"
password = "default-password"
# master_key_uri = "gcp-kms://projects/*/locations/*/keyRings/*/cryptoKeys/*"
# kms_credentials_path = "credentials.json"

[services.did]
name = "did"
methods = ["key", "web"]
local_resolution_methods = ["key", "web", "pkh", "peer"]
universal_resolver_url = "http://localhost:8088"
universal_resolver_methods = ["ion"]

[services.schema]
name = "schema"

[services.credential]
name = "credential"

[services.issuance]
name = "issuance"

[services.manifest]
name = "manifest"

[services.presentation]
name = "presentation"
expiration_duration = "30m"

[services.webhook]
name = "webhook"
webhook_timeout = "10s"
