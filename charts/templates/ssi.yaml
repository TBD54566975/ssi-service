apiVersion: v1
kind: Service
metadata:
  name: {{ include "ssi-service.fullname" . }}
  labels:
    {{- include "ssi-service.labels" . | nindent 4 }}
spec:
  type: {{ .Values.ssiService.service.type }}
  ports:
    - port: {{ .Values.ssiService.service.port }}
      targetPort: {{ .Values.ssiService.service.targetPort }}
      protocol: TCP
      name: http
  selector:
    {{- include "ssi-service.selectorLabels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ssi-service.fullname" . }}
  labels:
    {{- include "ssi-service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.ssiService.replicaCount }}
  selector:
    matchLabels:
      {{- include "ssi-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ssi-service.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: ssi-service
          image: "{{ .Values.ssiService.image.repository }}:{{ .Values.ssiService.image.tag }}"
          imagePullPolicy: {{ .Values.ssiService.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.ssiService.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: JAEGER_HTTP_URL
              value: "{{ .Values.ssiService.env.jaegerHttpUrl }}"
      {{- with .Values.ssiService.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 13 }}
      {{- end }}
      {{- with .Values.ssiService.affinity }}
      affinity:
        {{- toYaml . | nindent 13 }}
      {{- end }}
      {{- with .Values.ssiService.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 13 }}
      {{- end }}
      {{- with .Values.ssiService.tolerations }}
      tolerations:
        {{- toYaml . | nindent 13 }}
      {{- end }}
---
{{- if .Values.ssiService.istio.virtualService.enabled }}
{{ $fullName := include "ssi-service.fullname" . -}}
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ $fullName }}
spec:
  hosts:
  - "{{ .Values.ssiService.istio.virtualService.host }}"
  gateways:
  - {{ .Values.ssiService.istio.virtualService.gateway }}
  http:
  - route:
    - destination:
        port:
          number: {{ .Values.ssiService.service.port }}
        host: {{ $fullName }}
---
{{- end }}
{{- if .Values.ssiService.istio.authorizationPolicy.enabled }}
{{ $fullName := include "ssi-service.fullname" . -}}
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: {{ include "ssi-service.fullname" . }}
spec:
  action: ALLOW
  rules:
  - from:
    - source:
        namespaces: ["{{ .Release.Namespace }}", "{{ .Values.ssiService.istio.authorizationPolicy.gatewayNamespace }}"]
---
{{- end }}
{{- if .Values.ssiService.ingress.enabled }}
{{ $fullName := include "ssi-service.fullname" . -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "ssi-service.fullname" . }}
  annotations:
    {{- toYaml .Values.ssiService.ingress.annotations | nindent 4 }}
spec:
  rules:
  {{- range .Values.ssiService.ingress.hosts }}
  - host: {{ .host }}
    http:
      paths:
      {{- range .paths }}
      - path: {{ .path }}
        pathType: {{ .pathType }}
        backend:
          service:
            name: {{ $fullName }}
            port:
              number: {{ $.Values.ssiService.service.port }}
      {{- end }}
  {{- end }}
  {{- if .Values.ssiService.ingress.tls }}
  tls: {{- toYaml .Values.ssiService.ingress.tls | nindent 4 }}
  {{- end }}
---
{{- end }}
