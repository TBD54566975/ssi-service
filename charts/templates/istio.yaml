{{- if .Values.istio.virtualService.enabled }}
{{ $ssiService := include "ssi-service.fullname" . -}}
{{ $ssiConsole := include "ssi-console.fullname" . -}}
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ $ssiService }}
spec:
  hosts:
  - "{{ .Values.istio.virtualService.host }}"
  gateways:
  - {{ .Values.istio.virtualService.gateway }}
  http:
  - name: "api-route"
    match:
    - uri:
        prefix: "/v1"
    route:
    - destination:
        host: {{ $ssiService }}
        port:
          number: {{ .Values.ssiConsole.service.port }}
      headers:
        request:
          set:
            Authorization: 'Bearer %REQ(x-auth-request-access-token)%'
  - name: console-route
    route:
    - destination:
        host: {{ $ssiConsole }}
        port:
          number: {{ .Values.ssiService.service.port }}
      headers:
        request:
          set:
            Authorization: 'Bearer %REQ(x-auth-request-access-token)%'
---
{{- end }}
{{- if .Values.istio.authorizationPolicy.enabled }}
{{ $fullName := include "ssi-service.fullname" . -}}
{{ $shortName := include "ssi-service.shortname" . -}}
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: {{ $fullName }}
spec:
  action: ALLOW
  rules:
  - from:
    - source:
        namespaces: ["{{ .Release.Namespace }}"]
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: {{ $shortName }}-oauth
  namespace: {{ .Values.istio.authorizationPolicy.gatewayNamespace }}
spec:
  selector:
    matchLabels:
      istio: ingressgateway
  action: CUSTOM
  provider:
    name: "oauth2-proxy"
  rules:
  - to:
    - operation:
        hosts:
        - "{{ .Values.istio.virtualService.host }}"
        notPaths:
        - "/apply*"
        - "/submit*"
---
{{- end }}
